# Generated by Django 5.2.4 on 2025-08-07 14:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'Super Admin'), ('COMPANY_MANAGER', 'Company Manager'), ('HR_EMPLOYEE', 'HR Employee'), ('EMPLOYEE', 'Employee')], default='EMPLOYEE', help_text="User's role within the system", max_length=20)),
                ('phone_number', models.CharField(blank=True, help_text="User's contact phone number", max_length=20)),
                ('employee_id', models.CharField(blank=True, help_text='Company-specific employee identifier', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, help_text='Company this user belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='companies.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users_customuser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address of the invitee', max_length=254)),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'Super Admin'), ('COMPANY_MANAGER', 'Company Manager'), ('HR_EMPLOYEE', 'HR Employee'), ('EMPLOYEE', 'Employee')], default='EMPLOYEE', help_text='Role to assign to the invited user', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=10)),
                ('invitation_token', models.CharField(help_text='Unique token for invitation verification', max_length=100, unique=True)),
                ('expires_at', models.DateTimeField(help_text='When this invitation expires')),
                ('accepted_at', models.DateTimeField(blank=True, help_text='When the invitation was accepted', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='companies.company')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Invitation',
                'verbose_name_plural': 'User Invitations',
                'db_table': 'users_userinvitation',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, help_text="User's profile picture", null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, help_text='Short biography or description')),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth", null=True)),
                ('address', models.TextField(blank=True, help_text="User's address")),
                ('emergency_contact_name', models.CharField(blank=True, help_text="Emergency contact person's name", max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, help_text='Emergency contact phone number', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'users_userprofile',
            },
        ),
        migrations.AddConstraint(
            model_name='customuser',
            constraint=models.UniqueConstraint(condition=models.Q(('employee_id__isnull', False), models.Q(('employee_id', ''), _negated=True)), fields=('company', 'employee_id'), name='unique_employee_id_per_company'),
        ),
        migrations.AddConstraint(
            model_name='userinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'PENDING')), fields=('email', 'company'), name='unique_pending_invitation'),
        ),
    ]
